[{"title":"探索号 🛰️ 文章分享","path":"/articles.html","content":"关于 Stellar 探索号用户遇到问题第一步应该是查找官方文档，但是官方文档未必能够面面俱到，尤其是一些 DIY 方面的内容，这时候如果能有一个入口列出相关外站文章的话，对用户来说会非常有帮助，于是「Stellar 探索号」应运而生。任何人都可以很方便地提交文章到这个列表，只需要创建一个 issue 就可以了。如果您也有与 Stellar 相关的文章并希望显示在这里，可以直接在 hexo-theme-stellar 中选择【文章分享】模板按照格式提交即可，立即生效。"},{"title":"开发者和社区支持","path":"/contributors.html","content":"开发者 如何加入社区 社区建设主要包括以下几个方面： Issues 技术问题答疑、BUG反馈 Discussions 论坛、相关话题讨论 文档 维护 探索号 文章收录 QQ群：1146399464，验证码：vlts-2021（以聊天为主，技术问题未必跟进。） 无论在什么渠道，学习并掌握 提问的智慧(28k+ Stars) 可以方便大家更高效地帮你解决问题。 这类提问不会有人响应XXX 功能怎么用？（文档有详细描述）这个功能怎么用不了啊（不说明自己操作了什么，也不展示实际效果）我怎么跑不起来，能帮我看看吗？（什么也不尝试，直接丢项目代码）怎么报错了呢？（不贴或只贴极少部分的出错提示）这个代码怎么改（扔过来一大段代码）XXX 什么意思？（没有经过任何搜索） 这类提问会被积极响应我这里遇到了一个问题：【问题描述】，我经过了以下尝试：【思路细节】，不能得到解决，报错如下：【报错截图&#x2F;线上预览地址&#x2F;仓库源代码地址】，请问该怎么解决？我不太理解【某处】里的【某处】，我的理解是这样的：【思路细节】，对吗？我查看了文档的【某处】，并尝试【做法】，但是没有得到【预想效果】，正确的做法应该是什么？ 感谢点赞支持者1-100101-200201-300301-400401-500501-600601-700"},{"title":"使用 Stellar 主题的博客","path":"/examples.html","content":"开源 demo 示例xaoxuu&#x2F;hexo-theme-stellar-examples 这个仓库里有两个目录： 目录 场景 blog 普通博客、综合型站点，主页是博客文章列表 docs 单项目站点，没有博客功能，主页是文档主页 使用 Stellar 主题的博客 小提示如果您也使用了 Stellar 并希望显示在这里，可以在 hexo-theme-stellar-showcase 中提交 issue 告知您的站点信息，在您提交后的大约 3 分钟内生效。"},{"title":"一站多作者配置","path":"/authors.html","content":"支持多个作者在一个站点发布文章，需要先配置作者信息： blog/source/_data/authors.yml12345678910# 作者 1 （默认）xaoxuu: name: &#x27;Mr. X&#x27; avatar: /assets/xaoxuu/avatar/rect-256@2x.png banner: /assets/banner/friends.jpg description: 如果宇宙中真有什么终极的逻辑，那就是我们终有一天会在舰桥上重逢，直到生命终结。# 作者 2author2: name: xxx ... 配置了作者信息之后，第一个作者就是默认作者，在文章卡片和面包屑导航会显示作者名。对于不是默认作者的文章，需要在 front-matter 中指定本文的作者： blog/source/_posts/xxx.md123---author: author2--- 作者资料页 文章面包屑导航处点击作者链接会进入自动生成的作者个人资料页，目前内容是一个横幅加作者的文章列表。如果你有什么好的布局想法，请留言讨论～ 默认的个人资料页是： /author/id/index.html，可以在这里修改： blog/_config.stellar.yml123site_tree: author: base_dir: author"},{"title":"更新日志与注意事项","path":"/releases.html","content":"文档更新记录 版本命名规范：大版本 小版本 修复版本 大版本：较大范围改动和设计调整、重构 小版本：较小范围改动、增加删除功能，也可能包含部分修复 修复版本：仅包含修复或代码优化，可放心无缝升级 如何关注主题更新例如，您可以在自己博客任意位置用时间线标签显示主题最近一个版本更新内容：12&#123;% timeline api:https://api.github.com/repos/xaoxuu/hexo-theme-stellar/releases?per_page=1 %&#125;&#123;% endtimeline %&#125;"},{"title":"自定义小组件的配置与使用（9个）","path":"/widgets.html","content":"实现并显示一个小组件需要两个步骤： 【配置】在组件库中声明组件 【使用】在需要的位置调用 组件库在 _data/widgets.yml 文件中，需要自己创建，内容形如： 123&#x27;我的小组件1&#x27;: layout: 小组件布局模板 ...(其它属性) 使用的地方有：【主题配置】、【项目配置】、【页面】，后者可以覆盖前者，例如： blog/source/_posts/xxx.md123---leftbar: [&#x27;我的小组件1&#x27;, &#x27;我的小组件2&#x27;]--- 组件库在创建组件时，您可以使用以下这些 layout 布局： toc 这是文章&#x2F;文档的目录树组件，显示文章和文档的目录结构： blog/source/_data/widgets.yml1234567toc: layout: toc list_number: false # 是否显示序号 min_depth: 2 # 建议不要低于 2 即从 H2 标签开始解析（H1标签用于文章大标题） max_depth: 5 # 5 代表最多解析到 H5 标签 fallback: recent # Use a backup widget when toc does not exist. collapse: false # true / false / auto (始终折叠/不折叠/自动折叠) toc 的 fallback 默认是 recent，即一篇文章没有 TOC 的时候会显示一个 recent recent blog/source/_data/widgets.yml1234recent: layout: recent rss: # /atom.xml # npm i hexo-generator-feed limit: 5 # Count of posts 在 wiki 板块显示的是最近更新的 wiki 页面，其余地方显示最近更新的文章。 hexo 的覆盖规则是合并而不是替换，所以若不想使用 recent，除了在 _config.stellar.yml 中删除 recent 你还需要将此处的 recent 置空，即 blog/source/_data/widgets.yml1234recent:# layout: recent# rss: # /atom.xml # npm i hexo-generator-feed# limit: 5 # Count of posts 然后自己需要的地方用自己另建的一个 my_recent 组件 blog/source/_data/widgets.yml123my_recent: layout: recent ... related 相关文档组件，用于显示具有相同 tags 的其它项目列表，暂不支持自定义内容： Stellar 1.12.0 已将 wiki_more，更名为 related blog/source/_data/widgets.yml12related: layout: related linklist columns 为1显示为列表，2是每两个按钮放一行，icon 和 title 会同时显示，大于2则只显示 icon blog/source/_data/widgets.yml1234567linklist: layout: linklist columns: 1 items: - icon: &#x27;&lt;svg...&gt;&lt;/svg&gt;&#x27; # 或者 icons.yml 中设置的 icon 名称 title: 关于 url: /about/ markdown 这是一个自由度很高的标签，可以显示 markdown 文本内容： blog/source/_data/widgets.yml1234567891011121314151617181920welcome: layout: markdown title: 欢迎欢迎 linklist: # 与 linklist 组件写法相同 columns: 1 items: - icon: title: url: content: | 欢迎使用 [Stellar](https://github.com/xaoxuu/hexo-theme-stellar/) 主题，下面是您的入门指南，祝您使用愉快！ &lt;br&gt; **第一步** 创建 `blog/_config.stellar.yml` 文件，在此文件中填写需要自定义的主题配置。 &lt;br&gt; **第二步** 创建 `blog/source/_data/widgets.yml` 文件，此文件中填写需要自定义的侧边栏组件，例如 `welcome` 组件。 &lt;br&gt; 如果有任何疑问，请先查阅 [文档](https://xaoxuu.com/wiki/stellar/)，如果文档中没有提供，请提 [issue](https://github.com/xaoxuu/hexo-theme-stellar/issues/) 向开发者询问。 src: # 可以设置外部 md 文件链接 linklist 显示为嵌套在 md 组件中，效果参考 https://xaoxuu.comhttps://xaoxuu.com tagcloud 标签云组件： blog/source/_data/widgets.yml12345678910111213tagcloud: layout: tagcloud title: 标签云 # 标签云配置 min_font: 12 max_font: 24 amount: 100 orderby: name order: 1 # 1, sac 升序；-1, desc 降序 color: false # 使用颜色 start_color: # 开始的颜色。您可使用十六进位值（&#x27;#b700ff&#x27;），rgba（rgba(183, 0, 255, 1)），hsla（hsla(283, 100%, 50%, 1)）或 颜色关键字。此变量仅在 color 参数开启时才有用。 end_color: # 结束的颜色。您可使用十六进位值（&#x27;#b700ff&#x27;），rgba（rgba(183, 0, 255, 1)），hsla（hsla(283, 100%, 50%, 1)）或 颜色关键字。此变量仅在 color 参数开启时才有用。 show_count: false # 显示每个标签的文章总数 ghuser 显示 GitHub 用户基础信息卡片： blog/source/_data/widgets.yml12345ghuser: layout: ghuser username: github # your github login username avatar: true # show avatar or not menu: true # show menu or not ghrepo 显示 GitHub 仓库基础信息，需要搭配 repo 一起使用： blog/source/_data/widgets.yml12ghrepo: layout: ghrepo 需要在需要显示的文章页面的 front-matter 中按照如下格式写上仓库持有者和仓库名： blog/source/_posts/xxx.md123---repo: xaoxuu/hexo-theme-stellar--- 如果需要显示在 wiki 项目中，则在 _data/wiki/projects.yml 中填写到对应项目的信息中： blog/source/_data/wiki/projects.yml12345name: Stellartitle: Stellarsubtitle: &#x27;每个人的独立博客 | Designed by xaoxuu&#x27;repo: xaoxuu/hexo-theme-stellar... timeline 动态说说朋友圈微博动态时间线组件，这个功能在 1.12.0 版本后开始支持： 动态数据是从 GitHub Issues 中拉取的，使用方法为： 在 widgets.yml 中新建配置 blog/source/_data/widgets.yml123456timeline: layout: timeline title: 近期动态 api: https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues # 若你想限制数量，在api链接后面加上?per_page=1指限制为1条 user: # 是否过滤只显示某个人发布的内容，如果要筛选多人，用英文逗号隔开 hide: # title,footer # 隐藏标题或底部 # 此功能需要 Stellar v1.13.0这个功能在 1.13.0 版本后开始支持。 https://xaoxuu.com/wiki/stellar/third-party/fcircle.htmlhttps://xaoxuu.com/wiki/stellar/third-party/fcircle.html blog/source/_data/widgets.yml1234567# 愣着干啥，新建啊&#x27;朋友圈&#x27;: layout: timeline title: 近期动态 api: https://api.vlts.cc/output_data/v1/xaoxuu/friends-rss-generator # 你的朋友圈数据文件地址 type: fcircle limit: # 可通过这个限制最大数量这个功能在 1.18.0 版本后开始支持： blog/source/_data/widgets.yml123456weibo: layout: timeline title: 微博动态 api: https://raw.githubusercontent.com/GitHub用户名/仓库名/output/output/tweets.json # 你的微博爬取数据文件地址 type: weibo limit: 20 无论是哪种动态数据，你都可以在 _config.stellar.yml 中的 site_tree 中设置引用 blog/_config.stellar.yml123site_tree: ...: leftbar: welcome, recent, 朋友圈, weibo 或者在你需要显示的页面引入，页面内引入优先于配置文件引入： blog/source/_posts/xxx.md123---leftbar: [ghuser, 朋友圈]--- 配置默认布局在 1.26.0 版本中，站点主结构树有较大的变化，支持自定义每种页面的组件显示情况，侧边栏会按照指定的顺序从组件库中读取组件并显示： 列表类页面列表类页面是指博客文章列表、专栏列表、wiki 项目列表等页面的配置。 这里解释一下 base_dir 是什么意思，比如说当我创建一个 wiki 项目或者笔记页面时，会自动生成一个总项目列表，该页面的默认路径是 /wiki ，你可以 点此查看 该页面，改变 base_dir 即改变该路径。 blog/_config.stellar.yml123456789101112131415161718192021222324252627# 站点主结构树site_tree: # -- 列表类页面 -- # # 主页配置 home: leftbar: welcome, recent rightbar: timeline # 博客列表页配置 index_blog: base_dir: blog # 只影响自动生成的页面路径 menu_id: post # 未在 front-matter 中指定 menu_id 时，layout 为 post 的页面默认使用这里配置的 menu_id leftbar: welcome, recent # for categories/tags/archives rightbar: timeline nav_tabs: # 近期发布 分类 标签 专栏 归档 and ... # &#x27;朋友文章&#x27;: /friends/rss/ # 博客专栏列表页配置 index_topic: base_dir: topic # 只影响自动生成的页面路径 menu_id: post # 未在 front-matter 中指定 menu_id 时，layout 为 topic 的页面默认使用这里配置的 menu_id # 文档列表页配置 index_wiki: base_dir: wiki # 只影响自动生成的页面路径 menu_id: wiki # 未在 front-matter 中指定 menu_id 时，layout 为 wiki 的页面默认使用这里配置的 menu_id leftbar: ghissues, related, recent # for wiki rightbar: timeline nav_tabs: # &#x27;more&#x27;: https://github.com/xaoxuu 内容类页面是指具体到文章页面，文档页面和专栏文章等的具体配置 blog/_config.stellar.yml1234567891011121314151617181920212223242526272829303132# 站点主结构树site_tree: # -- 内容类页面 -- # # 博客文章内页配置 post: menu_id: post # 未在 front-matter 中指定 menu_id 时，layout 为 post 的页面默认使用这里配置的 menu_id leftbar: related, ghrepo, ghissues, recent # for pages using &#x27;layout:post&#x27; rightbar: ghrepo, toc # 博客专栏文章内页配置 topic: menu_id: post # 文档内页配置 wiki: menu_id: wiki # 未在 front-matter 中指定 menu_id 时，layout 为 wiki 的页面默认使用这里配置的 menu_id leftbar: tree, ghissues, related, recent # for wiki rightbar: ghrepo, toc # 作者信息配置 author: base_dir: author # 只影响自动生成的页面路径 menu_id: post leftbar: recent, timeline rightbar: timeline # 错误页配置 error_page: menu_id: post &#x27;404&#x27;: &#x27;/404.html&#x27; leftbar: recent, timeline rightbar: timeline # 其它自定义页面配置 layout: page page: leftbar: recent rightbar: toc, timeline 灵活用法继承（覆盖）组件适合有多个相似组件的情况，例如有多个时间线组件，显示规则相同，仅 api 地址不同： blog/source/_data/widgets.yml123456my_timeline_lite: layout: timeline title: 近期动态 user: xaoxuu hide: title,footer api: 在不同的页面设置不同的 api 地址： blog/source/_posts/xxx.md1234567---title: 某一篇文章leftbar: - welcome # 只写一个字符串代表引用对应的通用组件 - override: my_timeline_lite api: https://xxx--- 匿名组件：仅在使用时创建适合仅在一个页面或项目中才需要用到的组件，例如在某个页面的侧边栏放一个公告： blog/source/_posts/xxx.md1234567891011121314---title: 某一篇文章leftbar: - welcome # 只写一个字符串代表引用对应的通用组件 - layout: markdown title: &#x27;重要通知 [NOTE.2022-09]&#x27; content: | 请不要原封不动的把本站内容复制到贵站中使用，这样一方面不尊重原作者，另一方面也会因为存在大量重复内容影响贵站收录甚至降权。 从2022年9月起本站已不再开源，已经持有源码副本或`fork`的朋友请及时删除以防止被他人恶意搬运的情况继续发生。 [&gt; 了解详情](https://github.com/xaoxuu/xaoxuu.github.io#readme) src: # 可以设置外部 md 文件链接--- 又或者在项目的配置文件中创建专属于这个项目的组件： blog/_data/projects.yml12345678910Stellar: name: Stellar title: Stellar - 每个人的独立博客 subtitle: &#x27;每个人的独立博客 | Designed by xaoxuu&#x27; leftbar: - layout: timeline title: 最近更新 api: https://api.github.com/repos/xaoxuu/hexo-theme-stellar/releases?per_page=1 hide: footer ..."},{"title":"项目进度和近期计划","path":"/todo.html","content":""},{"title":"开始您全新的博客之旅","path":"/index.html","content":"Stellar 是一个内置文档系统的简约商务风 Hexo 主题，支持丰富的标签和动态数据组件，帮助您简单从容地应对各种表达需求，十分推荐内容创作者使用 Stellar 开始您全新的博客之旅。 了解 Stellar 的设计理念“真正的简约远不止删繁就简，而是在纷繁中建立秩序。”人的注意力是有限的，要提高有效信息的醒目程度，就必须降低不重要信息醒目程度，删除所有无效信息。降低视觉密度增加留白，增加间距。减少颜色丰富度，大面积出现的是中性色，彩色必须有其特殊意义，意义相同的元素使用同一种颜色。提高有效信息优先级文章标题永远是最大的，对比度最高的不可交互的不重要的小标题（如侧边栏某个插件的标题）降低对比度与文章相关的不重要的小标题，使用小号字体删掉无效信息文章标签、字数、阅读量、评论数网站访问量、字数、搭建时间全局播放器（除了特殊文章） 开始前的准备工作尽管我们致力于降低使用门槛，但是自建独立博客仍然需要一定的相关知识，markdown 常用语法是必须要掌握的，除此之外，您还需要知道 yaml 文件格式、简单的 git 知识，最最重要的是，遇到问题知道该如何高效地寻找答案： 翻阅和搜索文档 搜索 issues 中是否已经有解决办法 如果没有，新建 issue 并按照要求进行操作，详尽地描述您遇到的问题 如果您没有使用过 Hexo 也不要着急，我十分建议您去通读一遍 Hexo 中文文档。 https://hexo.io/zh-cn/docs/https://hexo.io/zh-cn/docs/ 此外，如果您从旧版本更新或者其它主题迁移，请确保环境版本不要太低，否则会产生兼容性问题： 建议的版本1234Hexo: 6.3.0 ~ 7.0.0hexo-cli: 4.3.0 ~ latestnode: 14.17.3 ～ 20.10.0 # 建议选择 LTS 版本，过高的版本 hexo 还没有进行兼容。npm: 6.14.13 ~ 10.2.3 安装与更新稳定版最新版自定义引用源码安装方法打开终端并进入博客文件夹，执行：在 blog/_config.yml 文件中找到并修改：更新方法打开终端并进入博客文件夹，执行：阅读 更新日志 进行迁移操作。适用范围稳定版适用于以内容创作为主，不需要自定义主题，追求稳定和可靠性的用户。安装方法把 Stellar 主题仓库添加为博客仓库的子模块在 blog/_config.yml 文件中找到并修改：更新方法打开终端并进入主题文件夹，执行：阅读 更新日志 进行迁移操作。适用范围最新版适用于以内容创作为主，不需要自定义主题，追求新特性的用户。安装方法把 Stellar 主题仓库 fork 到您的 GitHub 账号下把您 fork 的 Stellar 主题仓库添加为博客仓库的子模块在 blog/_config.yml 文件中找到并修改：更新方法在您 fork 的 Stellar 主题仓库打开终端，执行：阅读 更新日志 进行迁移操作。适用范围自定义版适用于对主题有自定义需求，且掌握了一定的前端知识和动手能力的用户。安装方法下载源码放到 themes/ 文件夹下面试用。适用范围仅适合测试，无法获得更新。 Star History本项目永久开源免费，如果您喜欢本项目，请 点个赞 支持一下吧～ 开源许可协议项目中的许可声明文件应包含在所有副本中 本项目是由 @xaoxuu 设计和开发，后期也合并了 开源贡献者 提交的代码，使用 MIT License 开源许可协议进行授权，拷贝、分享或基于此进行创作时请遵守协议内容： 123456789101112131415161718192021MIT LicenseCopyright (c) 2021 xaoxuuPermission is hereby granted, free of charge, to any person obtaining a copyof this software and associated documentation files (the &quot;Software&quot;), to dealin the Software without restriction, including without limitation the rightsto use, copy, modify, merge, publish, distribute, sublicense, and/or sellcopies of the Software, and to permit persons to whom the Software isfurnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in allcopies or substantial portions of the Software.THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS ORIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THEAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHERLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THESOFTWARE."},{"title":"实现博客专栏/专题","path":"/topic.html","content":"如果你使用过 Stellar 的 wiki 系统，那么专栏就非常容易了，相当于一个简化版的 wiki 系统，区别是： 无需「上架」动作 文章创建于 blog/source/_posts 文件夹内 按照时间排序，默认最新的排最上面 页面布局类似于普通文章 基本流程1. 创建一个专栏在 blog/source/_data/ 文件夹中创建一个 topic 文件夹，在其中放入各个专栏的描述文件，文件名就是项目的 id： blog/source/_data/topic/id.yml1234name: Stellar # 在面包屑导航上会显示较短的名字title: Stellar - 每个人的独立博客 # 在列表页会显示完整的专栏标题description: 关于搭建独立博客相关的知识和经验分享，以及 Stellar 的高级用法、版本更新相关的注意事项。order_by: -date # 默认是按发布日期倒序排序 2. 发布文章在此专栏文章的 md 文件的 front-matter 部分指定所属的专栏 id （即上一步创建的文件名 id.yml） blog/source/_posts/20240114.md123456---title: 这是文章标题topic: id # 这是专栏id，对应 blog/source/_data/topic/id.yml---文章正文 这个功能的定位是什么？相比分类功能，它更偏向于一个更加有前后关系的文章集合，类似于文档的分页，但是相比文档，它又像文章一样持续增加新页面，一般以时间为排序依据。比分类更加结构化，比文档更加自动化，可以根据自己的需求选择使用不同的功能。 https://xaoxuu.com/blog/20240203/https://xaoxuu.com/blog/20240203/"},{"title":"数据类标签组件（6个）","path":"/tag-plugins/data.html","content":"timeline 时间线支持静态和动态时间线数据源： 静态数据 github issues 支持多种筛选参数，详见 API github releases 支持多种筛选参数，详见 API gitea issues 支持多种筛选参数，详见 API gitea releases 支持多种筛选参数，详见 API memos … 常见的使用场景请看这篇文章： https://xaoxuu.com/blog/20221029/https://xaoxuu.com/blog/20221029/ 静态时间线静态数据是写死在 md 源文件中的，在 deploy 时就已经确定了。 2021 年 2 月 16 日主要部分功能已经开发的差不多了。2021 年 2 月 11 日今天除夕，也是生日，一个人在外地过年+过生日，熬夜开发新主题，尽量在假期结束前放出公测版。 写法如下1234567&#123;% timeline %&#125;&lt;!-- node 2021 年 2 月 16 日 --&gt;主要部分功能已经开发的差不多了。&#123;% image /assets/wiki/stellar/photos/hello@1x.png width:300px %&#125;&lt;!-- node 2021 年 2 月 11 日 --&gt;今天除夕，也是生日，一个人在外地过年+过生日，熬夜开发新主题，尽量在假期结束前放出公测版。&#123;% endtimeline %&#125; 动态时间线动态说说朋友圈微博动态动态数据是从 GitHub Issues 中拉取的，使用方法为： 建一个仓库 创建一个 issue 并添加一个 label 进行测试 写 timeline 标签时加上 api:https://api.github.com/repos/your-name/your-repo/issues 例如： _posts/xxx.md1&#123;% timeline api:https://api.github.com/repos/xaoxuu/blog-timeline/issues?direction=asc&amp;per_page=3 %&#125;&#123;% endtimeline %&#125; 效果如下： https://xaoxuu.com/wiki/stellar/third-party/fcircle.htmlhttps://xaoxuu.com/wiki/stellar/third-party/fcircle.html _posts/xxx.md12&#123;% timeline type:fcircle api:https://raw.github.xaox.cc/xaoxuu/friends-rss-generator/output/data.json %&#125;&#123;% endtimeline %&#125; fork shaoyaoqian&#x2F;WeiboSpider 的爬虫，修改自己的仓库名 修改 .github/workflows/main.yml 中的微博ID为你想爬取的ID，修改完后每天会自动爬取你的微博，存储为 json 文件，输出文件在 output 分支 _posts/xxx.md1&#123;% timeline limit:20 type:weibo api:你的json文件地址 %&#125;&#123;% endtimeline %&#125; 静态 + 动态用法同静态和动态单独使用时一样，例如： 1234&#123;% timeline reversed:true api:https://api.github.com/repos/xaoxuu/blog-timeline/issues?per_page=2 %&#125;&lt;!-- node 这条内容为静态数据 --&gt;这条内容为静态数据，静态数据在 `deploy` 时就已经确定了。&#123;% endtimeline %&#125; 数据筛选只显示某个人的数据筛选最近3条todo筛选评论最多的3条建议 上述示例代码如下： 12345678&#123;% folders %&#125;&lt;!-- 只显示某个人的数据 --&gt;&#123;% timeline user:xaoxuu api:https://api.github.com/repos/volantis-x/hexo-theme-volantis/issues %&#125;&#123;% endtimeline %&#125;&lt;!-- 筛选最近3条todo --&gt;&#123;% timeline api:https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues?labels=todo&amp;per_page=3 %&#125;&#123;% endtimeline %&#125;&lt;!-- 筛选评论最多的3条建议 --&gt;&#123;% timeline api:https://api.github.com/repos/volantis-x/hexo-theme-volantis/issues?labels=feature-request&amp;per_page=3&amp;sort=comments %&#125;&#123;% endtimeline %&#125;&#123;% endfolders %&#125; 更多用法详见： GitHub&nbsp;REST&nbsp;APIhttps://docs.github.com/en/rest/issues/issues#list-issues-assigned-to-the-authenticated-user friends 友链 您可以在任何位置插入友链组，支持静态数据和动态数据，静态数据需要写在数据文件中： blog/source/_data/links/ios_developer.yml12345- title: 某某某 url: https:// cover: icon: description: 在需要的位置这样写： 1&#123;% friends ios_developer %&#125; 实现动态友链从 xaoxuu&#x2F;issues-json-generator 作为模板克隆或者 fork 仓库 修改 config.yml 并打开 github action 的运行权限 config.yml12345# 要抓取的 issues 配置issues: repo: xaoxuu/friends # 仓库持有者/仓库名（改成自己的） label: active # 筛选具有 active 标签的 issue ，取消此项则会提取所有 open 状态的 issue sort: # updated-desc # 排序，按最近更新，取消此项则按创建时间排序 不出意外的话，仓库中已经配置好了 issue 模板，只需要在模板中指定的位置填写信息就可以了。然后在自己的仓库里提交一个 issue 并将 Label 设置为 active 进行测试。 提交完 issue 一分钟左右，如果仓库中出现了 output 分支提交，可以点击查看一下文件内容是否已经包含了刚刚提交的 issue 中的数据，如果包含，那么前端页面就可以使用友链数据了： 1&#123;% friends api:https://raw.github.xaox.cc/xaoxuu/friends/output/v2/data.json %&#125; 数据托管与加速特别感谢特别感谢小冰博客的加速访问方案，解决了直接请求 GitHub API 速度过慢的问题，详见 小冰博客 的教程。 支持把数据托管到任何其他地方来使用，例如： 1&#123;% friends api:https://raw.github.xaox.cc/xaoxuu/friends/output/v2/data.json %&#125; Stellar 1.13.0动态数据 API 升级至 v2 版本，原使用 issue-api 仓库的需要将友链仓库同步更新。v1 版本已经停止维护。 你可以有 N 种办法加速访问 GitHub 仓库里的文件。 sites 网站卡片 您可以在任何位置插入网站卡片组，支持静态数据和动态数据，静态数据需要写在数据文件中： blog/source/_data/links/sites_design.yml12345- title: 标题 url: https:// cover: icon: description: 在需要的位置这样写： 1&#123;% sites 分组名 %&#125; Stellar v1.13.0原 friends 和 sites 标签数据合并至 links/xxx.yml 文件，动态数据使用方法同友链，数据源格式相同，与友链共享数据，仅样式不同，也可以用 sites 标签做友链。 md 渲染外部 markdown 文件123&#123;% folding %&#125;&#123;% md https://raw.github.xaox.cc/xaoxuu/hexo-theme-stellar/main/README.md %&#125;&#123;% endfolding %&#125; 效果如下 ghcard 卡片 写法如下12&#123;% ghcard xaoxuu %&#125;&#123;% ghcard xaoxuu/hexo-theme-stellar theme:dark %&#125; GitHub&nbsp;Card&nbsp;APIhttps://github.com/anuraghazra/github-readme-stats toc 文档目录树1&#123;% toc wiki:xxx [open:true] [display:mobile] title %&#125;"},{"title":"容器类标签组件（11个）","path":"/tag-plugins/container.html","content":"box 盒子容器note 标签就是使用 box 容器实现的，它们样式是相同的： 语法格式123&#123;% box [title] [color:color] [child:codeblock/tabs] %&#125;...&#123;% endbox %&#125; 彩色代码块设置 child:codeblock 并设置 color:颜色枚举 可以实现 10 种不同颜色的代码块，彩色代码块一般可以用在代码正确与错误的示范对比场景。 示例示例代码 推荐的写法123func test() &#123; // ...&#125; 不推荐的写法123func test() -&gt; () &#123; // ...&#125; 嵌套其它标签例如嵌套一个 tabs 标签： 图文混排示例代码个人电脑作为办公设备时，我们该如何保护隐私？公司一般都会强制安装安防软件，这些软件要求开机自启动，要求有屏幕录制权限、完全的磁盘访问权限包括相册图库。因此如果使用自己的 MacBook 作为办公设备，必须要把生活区和工作区完全独立开，安装在两个磁盘分区，并且对磁盘分区进行加密。 folding 折叠容器折叠块标签的语法格式为： 123&#123;% folding title [codeblock:bool] [open:bool] [color:color] %&#125;content&#123;% endfolding %&#125; 参数说明123codeblock: true/falseopen: true/falsecolor: red/orange/yellow/green/cyan/blue/purple/light/dark 彩色可折叠代码块备注标签相较于旧版进行了增强，可以实现更多种颜色，还可以通过设置 child:codeblock 来实现可折叠的代码块。以下是一个默认打开的代码折叠框： 默认打开的代码折叠框123func test() &#123; print(&quot;hello world&quot;)&#125; 代码如下： 123&#123;% folding child:codeblock open:true color:yellow 默认打开的代码折叠框 %&#125;代码块&#123;% endfolding %&#125; 危险，请不要打开这个通过设置颜色，以实现更醒目的作用，但不要滥用色彩哦～警告，真的很危险通过设置颜色，以实现更醒目的作用，但不要滥用色彩哦～最后一次警告，千万不要打开这个不要说我们没有警告过你，Windows 10 不是為所有人設計，而是為每個人設計。 folders 多个折叠容器聚合样式相比 folding 简单一些，适用于多个折叠标签平铺显示的场景，例如题目列表： 题目1这是答案1题目2这是答案2题目3这是答案3 代码如下： 12345678&#123;% folders %&#125;&lt;!-- folder 题目1 --&gt;这是答案1&lt;!-- folder 题目2 --&gt;这是答案2&lt;!-- folder 题目3 --&gt;这是答案3&#123;% endfolders %&#125; tabs 分栏容器这个标签移植自 NexT 主题，但做了以下修改： 支持设置 align:center 来使内容居中 设置默认激活的标签方式为 active:1 而非 , 1（使用默认格式降低学习成本，且显式声明可读性更强） 不需要 &lt;!-- endtab --&gt; 来作为结束标识（因为 Stellar 会自动判断） 不需要 tabs id 来保证唯一性（因为 Stellar 会设置唯一标识） 不支持 @icon 方式设置图标（因为 Stellar 不再内置 fontawesome 图标库） 轮廓样式简化，可以搭配其它容器类标签嵌套使用。 演示效果示例代码图片代码块表格12let x = 123print(&quot;hello world&quot;) a b c a1 b1 c1 a2 b2 c2 grid 网格分区容器这个功能在 1.24.0 版本后获得重构，支持固定列数、动态列数、设置间距和圆角。 动态列数 默认的布局为【最小宽度为240px】即如果页面宽度大于 480px 则会显示为 2 列，大于 720px 则会显示为 3 列，以此类推，下面是效果： Unsplash PhotoThe Galactic Center is the rotational center of the Milky Way galaxy. Its central massive object is a supermassive black hole of about 4 million solar masses, which is called Sagittarius A*. Its mass is equal to four million suns. The center is located 25,800 light years away from Earth.Ōwhiro Bay, Wellington, New ZealandPublished on May 31, 2022SONY, ILCE-6000Free to use under the Unsplash License 示例写法如下：1234567891011121314&#123;% grid %&#125;&lt;!-- cell --&gt;&#123;% image https://images.unsplash.com/photo-1653979731557-530f259e0c2c?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=774&amp;q=80 download:https://unsplash.com/photos/bcql6CtuNv0/download?ixid=MnwxMjA3fDB8MXx0b3BpY3x8NnNNVmpUTFNrZVF8fHx8fDJ8fDE2Njg4NDAxMDI&amp;force=true %&#125;&lt;!-- cell --&gt;**[Unsplash Photo](https://unsplash.com/photos/bcql6CtuNv0)**The Galactic Center is the rotational center of the Milky Way galaxy. Its central massive object is a supermassive black hole of about 4 million solar masses, which is called Sagittarius A*. Its mass is equal to four million suns. The center is located 25,800 light years away from Earth.&gt; Ōwhiro Bay, Wellington, New Zealand&gt; Published on May 31, 2022&gt; SONY, ILCE-6000&gt; Free to use under the Unsplash License&#123;% endgrid %&#125; 如果要修改最小宽度，可以这样写： 123&#123;% grid w:350px %&#125;...&#123;% endgrid %&#125; 固定列数 如果要固定为 2 列，可以这样写： 123&#123;% grid c:2 %&#125;...&#123;% endgrid %&#125; 背景样式 普通 Box 样式： cell 1 cell 2 cell 3 cell 4 可浮起的卡片样式： cell 1 cell 2 cell 3 cell 4 示例写法如下：12345678910111213141516171819202122232425普通 Box 样式：&#123;% grid bg:box w:150px %&#125;&lt;!-- cell --&gt;cell 1&lt;!-- cell --&gt;cell 2&lt;!-- cell --&gt;cell 3&lt;!-- cell --&gt;cell 4&#123;% endgrid %&#125;可浮起的卡片样式：&#123;% grid bg:card w:150px %&#125;&lt;!-- cell --&gt;cell 1&lt;!-- cell --&gt;cell 2&lt;!-- cell --&gt;cell 3&lt;!-- cell --&gt;cell 4&#123;% endgrid %&#125; 设置间距 默认间距为 16px，如果需要修改，可以这样写： 12345678910&#123;% grid bg:card gap:32px w:120px %&#125;&lt;!-- cell --&gt;cell 1&lt;!-- cell --&gt;cell 2&lt;!-- cell --&gt;cell 3&lt;!-- cell --&gt;cell 4&#123;% endgrid %&#125; cell 1 cell 2 cell 3 cell 4 设置圆角半径 默认圆角半径等同于卡片的圆角半径，如果需要修改，可以这样写： 12345678910&#123;% grid bg:card br:4px w:150px %&#125;&lt;!-- cell --&gt;cell 1&lt;!-- cell --&gt;cell 2&lt;!-- cell --&gt;cell 3&lt;!-- cell --&gt;cell 4&#123;% endgrid %&#125; cell 1 cell 2 cell 3 cell 4 这里的 br 是 border-radius 的缩写，虽然和 &lt;br&gt; 易混淆，但是我不知道是否有其他更好的命名，全称太长了。 gallery 图库容器这个功能在 1.21.0 版本后开始支持，其内部只能填写 md 格式的图片。 @tianhao_wang@eberhard@eberhard@eberhard@eberhard@vklemen 写法如下12345678&#123;% gallery %&#125;![@tianhao_wang](https://images.unsplash.com/photo-1688142202243-e218ad203952?w=800&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.0.3&amp;ixid=M3wxMjA3fDB8MHx0b3BpYy1mZWVkfDYzfEZ6bzN6dU9ITjZ3fHxlbnwwfHx8fHw%3D)![@eberhard](https://images.unsplash.com/photo-1700994630045-f7a20df6d92e?w=800&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.0.3&amp;ixid=M3wxMjA3fDB8MHxwcm9maWxlLXBhZ2V8MjN8fHxlbnwwfHx8fHw%3D)![@eberhard](https://images.unsplash.com/photo-1533274221104-015a584a1005?w=800&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.0.3&amp;ixid=M3wxMjA3fDB8MHx0b3BpYy1mZWVkfDE4fGJvOGpRS1RhRTBZfHxlbnwwfHx8fHw%3D)![@eberhard](https://images.unsplash.com/photo-1539604214100-ab860d9082e0?w=800&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.0.3&amp;ixid=M3wxMjA3fDB8MHx0b3BpYy1mZWVkfDIxfGJvOGpRS1RhRTBZfHxlbnwwfHx8fHw%3D)![@eberhard](https://images.unsplash.com/photo-1698843848092-588f9c1bb0bd?w=800&amp;auto=format&amp;fit=crop&amp;q=60&amp;ixlib=rb-4.0.3&amp;ixid=M3wxMjA3fDB8MHxwcm9maWxlLXBhZ2V8Mzh8fHxlbnwwfHx8fHw%3D)![@vklemen](https://images.unsplash.com/photo-1516571748831-5d81767b788d?q=80&amp;w=2574&amp;auto=format&amp;fit=crop&amp;ixlib=rb-4.0.3&amp;ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D)&#123;% endgallery %&#125; 详细用法请看这篇文章： /blog/20231223http://example.com/blog/20231223 albums 专辑容器类似于 gallery 但是支持点击跳转，数据来源于 blog/source/_data/links/group_id.yml blog/source/_posts/xxx.md1&#123;% albums group_id %&#125; posters 海报容器类似于 gallery 但是支持点击跳转，数据来源于 blog/source/_data/links/group_id.yml blog/source/_posts/xxx.md1&#123;% posters group_id %&#125; banner 横幅容器这个功能在 1.21.0 版本后开始支持，将会取代 about 组件，请尽快完成迁移。 用于独立页面顶部 随记收藏随记 写法如下：123&#123;% banner 随记 bg:/assets/banner/notes.jpg %&#125;&#123;% navbar active:/notes/ [随记](/notes/) [收藏](/bookmark/) %&#125;&#123;% endbanner %&#125; 用于用户个人资料页 某某这是个人简介 写法如下：12&#123;% banner 某某 这是个人简介 avatar:/assets/xaoxuu/avatar/rect-256@2x.png bg:/assets/banner/nebula.jpg %&#125;&#123;% endbanner %&#125; 用作文章摘要卡片设置 link 可以让整个卡片响应点击事件，实现点击跳转到对应文章： 12&#123;% banner 博客进阶：自动化部署 本文讲了如何利用脚本和 GitHub Actions 简化博客搭建和部署流程，提高效率。 bg:/assets/xaoxuu/blog/2022-1126a@2x.jpg link:/blog/20221126/ %&#125;&#123;% endbanner %&#125; 博客进阶：自动化部署本文讲了如何利用脚本和 GitHub Actions 简化博客搭建和部署流程，提高效率。 about 关于块容器这个功能即将废弃在 1.21.0 版本后请使用 banner 组件代替。 方便在关于页面显示一段图文信息，比普通块容器稍微有一点点不一样： 1234567891011&#123;% about avatar:/assets/xaoxuu/avatar/rect-256@2x.png height:80px %&#125;&lt;img height=&quot;32px&quot; alt=&quot;XAOXUU&quot; src=&quot;/assets/xaoxuu/logo/180x30@2x.png&quot;&gt;**如果宇宙中真有什么终极的逻辑，那就是我们终有一天会在舰桥上重逢，直到生命终结。**XAOXUU 目前是一个 iOS 开发者，代表作品有：ProHUD、ValueX 等。在业余时间也开发了 Stellar 博客主题，更多的作品可以去项目主页查看，希望大家喜欢～&#123;% navbar [文章](/) [项目](/wiki/) [留言](#comments) [GitHub](https://github.com/xaoxuu/) %&#125;&#123;% endabout %&#125; swiper 轮播容器默认一张图片是 50% 宽度，通过设置 width:min 设置为 25% 宽度，width:max 设置为 100% 宽度。 写法如下123456&#123;% swiper effect:cards %&#125;![](https://images.unsplash.com/photo-1625171515821-1870deb2743b?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=774&amp;q=80)![](https://images.unsplash.com/photo-1528283648649-33347faa5d9e?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=774&amp;q=80)![](https://images.unsplash.com/photo-1542272201-b1ca555f8505?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=774&amp;q=80)![](https://images.unsplash.com/photo-1524797905120-92940d3a18d6?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=774&amp;q=80)&#123;% endswiper %&#125; 宽度切换效果写法如下123&#123;% swiper width:min/max %&#125;...&#123;% endswiper %&#125;123&#123;% swiper effect:cards/coverflow %&#125;...&#123;% endswiper %&#125; 注意一个页面只能设置一次，第一个 swiper 容器的效果全局生效。"},{"title":"使用标签组件增强阅读体验","path":"/tag-plugins/index.html","content":"Stellar 内置的标签组件和 Hexo 官方的一样使用空格分隔多个参数，所以如果参数内容中需要出现的空格被意外分隔开了的时候，请使用 &amp;nbsp; 代替。为了方便理解，本文档语法格式中的可选参数用方括号括起来，键值对参数用冒号分隔开，例如： 1&#123;% image src [description] [download:bool/string] %&#125; 就表明第一个参数是图片链接，第二个参数是图片描述，而 download 是可选参数，并且值是布尔或字符串类型，第二三个参数为可选参数。 了解参数解析规则以图片标签为例，使用空格分隔开之后得到一个数组，如果图片描述文字中有空格，多分出来的这些「参数」被合并到最后一个「非键值对参数」中，什么是「非键值对参数」呢？举个例子您就明白了：1&#123;% image /assets/wiki/stellar/photos/183e71e0ad995.jpg 来自印度的 Rohit Vohra 使用 iPhone 12 Pro Max 拍摄。 download:https://www.apple.com.cn/newsroom/images/product/iphone/lifestyle/Apple_ShotoniPhone-rohit_vohra_12172020.zip %&#125;这个例子中，download:https://xxxx 是有冒号分隔开的，download 为键，后面的网址为值，所以叫做「键值对参数」；与此相对的，没有冒号分隔的就叫做「非键值对参数」。键值对参数可以放在任何位置，我可以通过匹配键来解析，而非键值对参数则只能通过顺序解析，所以它们必须和文档中要求的前后顺序一致。一般核心的、重要的参数会设置成非键值对参数，而可选参数设置成键值对参数。"},{"title":"表达类标签组件（19+个）","path":"/tag-plugins/express.html","content":"emoji 表情包效果演示语法格式引入表情包内置了可配置的表情标签 使用方法如下： 123&#123;% emoji 爱你 %&#125;&#123;% emoji blobcat ablobcatattentionreverse %&#125;&#123;% emoji tieba 滑稽 %&#125; 如果对高度有特别要求，可以指定高度，例如： 1&lt;center&gt;&#123;% emoji blobcat ablobcatrainbow height:1em %&#125;&#123;% emoji blobcat ablobcatrainbow height:2em %&#125;&#123;% emoji blobcat ablobcatrainbow height:3em %&#125;&#123;% emoji blobcat ablobcatrainbow height:2em %&#125;&#123;% emoji blobcat ablobcatrainbow height:1em %&#125;&lt;/center&gt;1&#123;% emoji [source] name [height:1.75em] %&#125; 其中 source 可省略，默认为配置中的第一个 source（详见「引入表情包」部分） 表情速查表：Stellar内嵌blobcat小表情 blog/_config.stellar.yml12345678tag_plugins: ... emoji: default: https://gcore.jsdelivr.net/gh/cdn-x/emoji/qq/&#123;name&#125;.gif twemoji: https://gcore.jsdelivr.net/gh/twitter/twemoji/assets/svg/&#123;name&#125;.svg qq: https://gcore.jsdelivr.net/gh/cdn-x/emoji/qq/&#123;name&#125;.gif aru: https://gcore.jsdelivr.net/gh/cdn-x/emoji/aru-l/&#123;name&#125;.gif tieba: https://gcore.jsdelivr.net/gh/cdn-x/emoji/tieba/&#123;name&#125;.png 在配置文件中，文件名用 {name} 代替。 icon 图标标签支持在任意位置插入图标，支持外链图标，也可以在 icons.yml 中提前配置好。 可以指定图标的颜色吗？ 当然可以，还可以在主题配置中设置默认颜色： 写法如下123icons.yml 中的图标：&#123;% icon solar:planet-bold-duotone %&#125;外链图标：&#123;% icon https://api.iconify.design/solar:link-circle-bold.svg %&#125;指定颜色：&#123;% icon ph:seal-question-fill color:red %&#125; 配置默认颜色1234tag_plugins: icon: # 留空时，图标和文字颜色相同 default_color: accent # theme, accent, red, orange, yellow, green, cyan, blue, purple 还支持 style 参数，可以直接对样式进行修改，仅支持外链图标，style 参数中间不能有空格。 mark 标记标签支持多彩标记，包括：默认 红 橙 黄 绿 青 蓝 紫 亮 暗 警告 错误 一共 12 种颜色。 1支持多彩标记，包括：&#123;% mark 默认 %&#125; &#123;% mark 红 color:red %&#125; &#123;% mark 橙 color:orange %&#125; &#123;% mark 黄 color:yellow %&#125; &#123;% mark 绿 color:green %&#125; &#123;% mark 青 color:cyan %&#125; &#123;% mark 蓝 color:blue %&#125; &#123;% mark 紫 color:purple %&#125; &#123;% mark 亮 color:light %&#125; &#123;% mark 暗 color:dark %&#125; &#123;% mark 警告 color:warning %&#125; &#123;% mark 错误 color:error %&#125; 一共 12 种颜色。 hashtag 标签Stellar Hexo GitHub Gitea 如果没有指定颜色，且没有设置默认颜色，则随机取一个颜色，快来试试吧～ 1234&#123;% hashtag Stellar https://xaoxuu.com/wiki/stellar/ %&#125;&#123;% hashtag Hexo https://hexo.io/ %&#125;&#123;% hashtag GitHub https://github.com/xaoxuu/ %&#125;&#123;% hashtag Gitea https://git.xaox.cc/ color:green %&#125; image 图片标签图片标签是一个精心设计的应对各种尺寸插图的标签，对于大图，可以放置一个「下载」按钮，语法格式如下： 1&#123;% image src [description] [download:bool/string] [width:px] [padding:px] [bg:hex] %&#125; 参数说明123456src: 图片地址description: 图片描述download: href # 下载地址，设置此值后鼠标放在图片上会显示下载地址，如果下载地址为图片地址，可以设置为 truewidth: 200px # 图片宽度padding: 16px # 图片四周填充宽度bg: &#x27;#ffffff&#x27; # 图片区域背景颜色，16进制 横向铺满的图片无论在什么宽度的设备上都希望横向铺满的图片，一般不需要额外操作。可以在链接后面写上图片描述，如有必要，可以通过设置 download:true 使其显示一个「下载」按钮链接指向图片地址，如果下载链接与显示的图片地址不同，可以 download:下载链接 来使其能够下载原图。 图片由 xaoxuu 拍摄于一个普通的阳光明媚的下午 写法如下1&#123;% image https://s.xaox.cc/xaoxuu/posts/202401131914137.jpg-hd 图片由 xaoxuu 拍摄于一个普通的阳光明媚的下午 download:https://s.xaox.cc/xaoxuu/posts/202401131914137.jpg-hd %&#125; 竖图（小图）优化宽度较小而高度较大的图片，可以设置宽、高、填充间距、背景色等对其布局进行优化，使得它在不同宽度的屏幕下都能获得不错的视觉体验： 限制宽度设置填充区域图片由 xaoxuu 拍摄于 Dattle 幼年时期 1&#123;% image /assets/xaoxuu/mirror/apple/documentation/watchkit/06d45110-1dd7-49a4-a413-9f5159ecdd0e.png width:200px padding:16px bg:white %&#125; 如果不进行约束，在宽屏设备上会占用很大篇幅可以设置填充宽度和颜色，支持 bg:var(--card) 动态颜色，能够适配暗黑模式： 1&#123;% image /assets/wiki/stellar/icon.svg bg:var(--card) padding:16px %&#125; 支持 Fancybox 插件点击放大由于 Stellar 主题的插件具有按需加载的特性，所以 Fancybox 插件默认也是已经配置好了的，在任意 image 标签中增加 fancybox:true 参数即可为特定图片开启缩放功能。如果一个页面没有任何地方使用，则不会加载 Fancybox 插件。 图片来自 Apple 官网 如果您希望全站所有的 image 标签都开启此功能，可在主题配置文件中修改以下参数： blog/_config.stellar.yml12345######## Tag Plugins ########tag_plugins: # &#123;% image %&#125; image: fancybox: false quot 引用适合居中且醒目的引用：Stellar 是迄今为止最好用的主题 支持自定义引号：热门话题 其中自定义引号素材在主题配置文件的 tag_plugins.quot 中配置： 123456789tag_plugins: ... # &#123;% quot %&#125; quot: default: # 可以自行配置多种图标方案 prefix: https://bu.dusays.com/2022/10/24/63567d3e092ff.png suffix: https://bu.dusays.com/2022/10/24/63567d3e0ab55.png hashtag: prefix: https://bu.dusays.com/2022/10/24/63567d3e07da3.png 写法如下12适合居中且醒目的引用：&#123;% quot Stellar 是迄今为止最好用的主题 %&#125;支持自定义引号：&#123;% quot 热门话题 icon:hashtag %&#125;、&#123;% quot 特别引用 icon:default %&#125; 特别引用 此外，加上 el:h2/h3/h4/h5/h6 可以作为标题使用 使用任意图标从 1.26.5 版本开始，您可以通过 prefix 或 suffix 参数设置任意图标或图片，支持 URL 或 icons.yml 文件中配置，例如： 这是一个 icons.yml 配置的示例 这是一个 url 的示例 写法如下123&#123;% quot prefix:solar:planet-bold-duotone 这是一个 icons.yml 配置的示例 %&#125;&#123;% quot prefix:https://api.iconify.design/line-md:moon-alt-to-sunny-outline-loop-transition.svg 这是一个 url 的示例 suffix:https://api.iconify.design/solar:list-heart-minimalistic-line-duotone.svg %&#125; 虽然丰富多彩的图标可以使其变得更醒目，但是滥用就会导致文章显得杂乱无章。 poetry 诗词示例写法游山西村陆游莫笑农家腊酒浑，丰年留客足鸡豚。山重水复疑无路，柳暗花明又一村。箫鼓追随春社近，衣冠简朴古风存。从今若许闲乘月，拄杖无时夜叩门。诗词节选123456&#123;% poetry 游山西村 author:陆游 footer:诗词节选 %&#125;莫笑农家腊酒浑，丰年留客足鸡豚。**山重水复疑无路，柳暗花明又一村。**箫鼓追随春社近，衣冠简朴古风存。从今若许闲乘月，拄杖无时夜叩门。&#123;% endpoetry %&#125; note 备注块示例写法1&#123;% note [title] content [color:color] %&#125;123title: 标题（可选）content: 内容color: red/orange/yellow/green/cyan/blue/purple/light/dark/warning/error 具有标题的备注块直接写备注内容，默认是和代码块一样的样式，第一个空格前面的是标题，后面的是正文，如果标题中需要显示空格，请使用 &amp;nbsp; 代替。 示例写法这&nbsp;是标题这是正文 哈哈。1&#123;% note 这&amp;nbsp;是标题 这是正文 哈哈。 %&#125; 彩色备注块一共支持12种颜色，可以满足几乎所有的需求了。color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。 示例写法一共支持12种颜色，可以满足几乎所有的需求了一共支持12种颜色，可以满足几乎所有的需求了。color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。一共支持12种颜色，可以满足几乎所有的需求了。color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。一共支持12种颜色，可以满足几乎所有的需求了。color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。一共支持12种颜色，可以满足几乎所有的需求了。color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。一共支持12种颜色，可以满足几乎所有的需求了。color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。一共支持12种颜色，可以满足几乎所有的需求了。color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。一共支持12种颜色，可以满足几乎所有的需求了。color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。一共支持12种颜色，可以满足几乎所有的需求了。color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。一共支持12种颜色，可以满足几乎所有的需求了。color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。一共支持12种颜色，可以满足几乎所有的需求了。color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。一共支持12种颜色，可以满足几乎所有的需求了。color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。一共支持12种颜色，可以满足几乎所有的需求了。color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。一共支持12种颜色，可以满足几乎所有的需求了。color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。12&#123;% note 一共支持12种颜色，可以满足几乎所有的需求了。 color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。 %&#125;&#123;% note color:cyan 一共支持12种颜色，可以满足几乎所有的需求了。 color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。 %&#125; link 链接卡片效果演示语法格式写法示例https://xaoxuu.com/blog/20221029/https://xaoxuu.com/blog/20221029/ https://xaoxuu.com/blog/20221029/https://xaoxuu.com/blog/20221029/外链卡片标签的语法格式为： 1&#123;% link href [title] [icon:src] [desc:true/false] %&#125; 参数含义： 1234href: 链接title: 可选，手动设置标题（为空时会自动抓取页面标题）icon: 可选，手动设置图标（为空时会自动抓取页面图标）desc: 可选，是否显示摘要描述，为true时将会显示页面描述1234不带摘要的样式：&#123;% link https://xaoxuu.com/blog/20221029/ %&#125;带摘要的样式：&#123;% link https://xaoxuu.com/blog/20221029/ desc:true %&#125; 随着网站流量的增加，使用主题默认的 api 很可能会导致流量超限，推荐使用自部署的 api 抓取网站信息。参考下方仓库的 README 。 https://github.com/xaoxuu/site-info-apihttps://github.com/xaoxuu/site-info-api 并在主题配置中填入你的 api blog/_config.stellar.yml123456services: # &#123;% link %&#125; siteinfo: # 设置 api 可以自动提取网页标题、图标，服务部署方法：https://github.com/xaoxuu/site-info-api/ # 接口测试通过后，把按钮的 href 部分替换成 &#123;href&#125; 之后填写到下方，例如：https://api.vlts.cc/site_info/v1?url=&#123;href&#125; api: button 按钮这个功能在 1.26.6 版本后开始支持。 solar:notebook-bold文档 solar:code-square-bold源码 solar:cup-star-bold-duotone示例 写法如下1&#123;% button 探索 https://github.com/xaoxuu/hexo-theme-stellar/ icon:solar:planet-bold-duotone %&#125; 语法格式1&#123;% button text url [icon:key/src] [color:color] [size:xs] %&#125; 参数含义1234567# 必填text: 探索 # 显示文字url: # 跳转链接# 可选参数color: orange # theme, accent, red, orange, yellow, green, cyan, blue, purpleicon: solar:planet-bold-duotone # 显示图标，支持 icon.yml 中的文件名和外链图标size: xs # 按钮尺寸，目前只有两种尺寸：默认是普通大小， xs 是最小号 okr 目标管理这个功能在 1.20.0 版本后开始支持，这是一个 OKR（Objectives and Key Results）示例： O1 2024年的小目标：完成 Volantis 6.0 并发布上线 来自2025年的复盘：已《基本》实现目标 正常 44% KR1 重构 tag-plugins 和 wiki 系统 当 KR 进度为 100% 时，标签默认显示为 已完成当 KR 未设置进度时，默认为 0%当 O 未设置进度时，则显示所有 KR 进度平均值 已完成 100% KR2 完成主要页面设计稿 小提示1小提示2您可以在 _config.yml 文件中修改标签的颜色和文案您可以在 _config.yml 文件中增加任意的标签配置 延期 90% KR3 完成前置准备工作（如果你知道答案，请在留言区帮帮我！🥹） 在咸水和海滩之间找一亩地求出圆周率后15位找出宇宙的终极逻辑去地狱里走两步 未完成 -12% KR-4 开发、测试和发布 支持嵌套插入图片等其它简单组件 风险 0% 写法如下： 1234567891011121314151617181920212223242526272829303132&#123;% okr o1 %&#125;2024年的小目标：完成 Volantis 6.0 并发布上线来自2025年的复盘：已《基本》实现目标 &#123;% emoji tieba 滑稽 %&#125;&lt;!-- okr kr1 percent:1 --&gt;重构 tag-plugins 和 wiki 系统- 当 &#123;% mark KR %&#125; 进度为 100% 时，标签默认显示为 &#123;% mark color:green 已完成 %&#125;- 当 &#123;% mark KR %&#125; 未设置进度时，默认为 &#123;% mark 0% %&#125;- 当 &#123;% mark O %&#125; 未设置进度时，则显示所有 &#123;% mark KR %&#125; 进度平均值&lt;!-- okr kr2 percent:0.9 status:off_track --&gt;完成主要页面设计稿&#123;% tabs align:left %&#125;&lt;!-- tab 小提示1 --&gt;您可以在 _config.yml 文件中修改标签的颜色和文案&lt;!-- tab 小提示2 --&gt;您可以在 _config.yml 文件中增加任意的标签配置&#123;% endtabs %&#125;&lt;!-- okr kr3 percent:-0.12 status:unfinished --&gt;完成前置准备工作（如果你知道答案，请在留言区帮帮我！🥹）&#123;% checkbox 在咸水和海滩之间找一亩地 %&#125;&#123;% checkbox 求出圆周率后15位 %&#125;&#123;% checkbox 找出宇宙的终极逻辑 %&#125;&#123;% checkbox 去地狱里走两步 %&#125;&lt;!-- okr kr-4 status:at_risk --&gt;开发、测试和发布&#123;% image /assets/wiki/stellar/icon.svg height:64px 支持嵌套插入图片等其它简单组件 %&#125;&#123;% endokr %&#125; copy 复制行示例写法对于单行内容，可以使用 copy 标签来实现复制功能： $ 您可以设置 git:https 或者 git:ssh 或者 git:gh 来快速放置一个 git 仓库链接： HTTPS12345&#123;% copy curl -s https://sh.xaox.cc/install | sh %&#125;&#123;% copy curl -s https://sh.xaox.cc/install | sh prefix:$ %&#125;&#123;% copy git:https xaoxuu.com/hexo-theme-stellar %&#125;&#123;% copy git:ssh xaoxuu.com/hexo-theme-stellar %&#125;&#123;% copy git:gh xaoxuu.com/hexo-theme-stellar %&#125; radio 单选示例写法没有勾选的单选框 已勾选的单选框12&#123;% radio 没有勾选的单选框 %&#125;&#123;% radio checked:true 已勾选的单选框 %&#125; 支持的参数12checked: true/falsecolor: red/orange/yellow/green/cyan/blue/purple checkbox 复选示例写法普通的没有勾选的复选框 普通的已勾选的复选框 显示为加号的绿色的已勾选的复选框 显示为减号的黄色的已勾选的复选框 显示为乘号的红色的已勾选的复选框12345&#123;% checkbox 普通的没有勾选的复选框 %&#125;&#123;% checkbox checked:true 普通的已勾选的复选框 %&#125;&#123;% checkbox symbol:plus color:green checked:true 显示为加号的绿色的已勾选的复选框 %&#125;&#123;% checkbox symbol:minus color:yellow checked:true 显示为减号的黄色的已勾选的复选框 %&#125;&#123;% checkbox symbol:times color:red checked:true 显示为乘号的红色的已勾选的复选框 %&#125; 支持的参数123checked: true/falsecolor: red/orange/yellow/green/cyan/blue/purplesymbol: plus/minus/times audio 音频标签支持音乐外链以及网易云音乐，网易云支持设置 type 以及 autoplay 参数。 Your browser does not support the audio tag. 写法如下12345&#123;% audio https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3 %&#125;&#123;% audio netease:1856385686 %&#125;&#123;% audio type:2 netease:1856385686 autoplay:0 %&#125; 支持的参数123type: 2/0 # 歌曲/歌单 # 不设置默认为2歌曲模式netease: xxx # 歌曲/歌单 id ，具体 id 在网易云网页版的网址链接中寻找 autoplay: 1/0 # 自动播放/手动播放 # 不设置默认0手动播放 video 视频标签支持 bilibili 和视频外链，可设置最大宽度， bili 可设置自动播放 Your browser does not support the video tag. Your browser does not support the video tag. 写法如下12345678910&#123;% video bilibili:BV1GP4y1d729 %&#125;&#123;% video bilibili:BV1GP4y1d729 width:100% autoplay:0 %&#125;&#123;% grid c:2 %&#125;&lt;!-- cell --&gt;&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %&#125;&lt;!-- cell --&gt;&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov width:100% %&#125;&#123;% endgrid %&#125; 支持的参数12width: 500px # 须带单位 80% 20em 100mm...autoplay: 1/0 # 自动播放/手动播放 # 不设置默认为0手动播放 目前 bilibili 的 iframe 标签不能放进 grid 容器里，原因未知。 navbar 导航栏文章内也可以插入一个导航栏： 1&#123;% navbar active:/wiki/ [文章](/) [项目](/wiki/) [留言](#comments) [GitHub](https://github.com/xaoxuu/) %&#125; active 传入要高亮的那个按钮的 url 文章项目留言GitHub frame 设备框架示例写法1&#123;% frame iphone11 img:/assets/wiki/prohud/toast/demo-loading.png video:/assets/wiki/prohud/toast/demo-loading.mp4 focus:top %&#125; 文本修饰标签集 这是 密码 标签 这是 下划线 标签 这是 着重号 标签 这是 波浪线 标签 这是 删除线 标签 这是 上角标 标签 这是 下角标 标签 这是 键盘样式 标签，试一试：⌘ + D 写法如下12345678- 这是 &#123;% psw 密码 %&#125; 标签- 这是 &#123;% u 下划线 %&#125; 标签- 这是 &#123;% emp 着重号 %&#125; 标签- 这是 &#123;% wavy 波浪线 %&#125; 标签- 这是 &#123;% del 删除线 %&#125; 标签- 这是 &#123;% sup 上角标 color:red %&#125; 标签- 这是 &#123;% sub 下角标 %&#125; 标签- 这是 &#123;% kbd 键盘样式 %&#125; 标签，试一试：&#123;% kbd ⌘ %&#125; + &#123;% kbd D %&#125;"},{"title":"使用「友链朋友圈」极简版","path":"/third-party/fcircle.html","content":"特别感谢主题内置版本数据服务由 友链朋友圈 极简版提供。这个功能在 1.13.0 版本后开始支持。 第一步：fork repofork @Rock-Candy-Tea&#x2F;hexo-circle-of-friends第二步：设置自己的友链页面地址和主题类型修改 hexo_circle_of_friends/fc_settings.yaml 文件：1- &#123;link: &quot;https://xaoxuu.com/friends/&quot;, theme: &quot;stellar&quot;&#125; # 友链页地址1，修改为你的友链页地址第三步：打开 Issues 友链抓取功能修改 hexo_circle_of_friends/fc_settings.yaml 文件：1234567GITHUB_FRIENDS_LINKS: &#123; enable: true, # true 开启github issue兼容 type: &quot;volantis&quot;, # volantis/stellar用户请在这里填写volantis owner: &quot;xaoxuu&quot;, # 填写你的github用户名 repo: &quot;friends&quot;, # 填写你的github仓库名 state: &quot;open&quot;, # 填写抓取的issue状态(open/closed)&#125;第四步：打开 Actions 运行权限见官方教程 #simplemode第五步：放置在博客中支持首页文章导航栏、文章任意位置，创建一个文件，以本站 friends/rss/index.md 为例：12345678910---title: 朋友文章robots: noindex,nofollowmenu_id: postcomments: falsenav_tabs: true # 这就意味着页面会显示首页文章导航栏leftbar: [welcome, recent]---&#123;% timeline type:fcircle api:https://raw.github.xaox.cc/xaoxuu/friends-rss-generator/output/data.json %&#125;&#123;% endtimeline %&#125;其中，api 部分替换为自己仓库地址及其对应的 data.json 文件真实路径。其中，nav_tabs: true 意味着页面会显示首页文章导航栏，搭配主题配置文件中的：1234site_tree: blog: nav_tabs: &#x27;朋友文章&#x27;: /friends/rss/即可实现在首页增加一个「朋友文章」栏目的效果。 你依然可以按照官方教程使用完整版。 本站示例仓库：@xaoxuu&#x2F;friends-rss-generator 如果把 data.json 输出到 output 分支，可以直接使用下面的 API 来访问文件： 12https://api.vlts.cc/output_data/v1/xaoxuu/friends-rss-generatorhttps://raw.github.xaox.cc/xaoxuu/friends-rss-generator/output/data.json"},{"title":"使用「katex」插件","path":"/third-party/katex.html","content":"使用前需要在 Markdown 文件开头加入 _posts/xxx.md123---katex: true--- 演示效果代码示例$$\\sum_{i&#x3D;0}^n i^2 &#x3D; \\frac{(n^2+n)(2n+1)}{6}$$_posts/xxx.md1$$\\sum_&#123;i=0&#125;^n i^2 = \\frac&#123;(n^2+n)(2n+1)&#125;&#123;6&#125;$$"},{"title":"使用「memos」极简版","path":"/third-party/memos.html","content":"需要有自己的 memos 账号，可以在别人部署的 memos 上注册，或者自建 memos 服务，详见官方文档： https://www.usememos.comhttps://www.usememos.com 作为侧边栏组件使用创建个人的 memos 时间线组件blog/source/_data/widgets.yml123456timeline: layout: timeline title: 近期动态 api: https://memos.xaox.cc/api/v1/memo?creatorId=1&amp;limit=10 type: memos hide: user,footer 创建多人的 memos 时间线组件blog/source/_data/widgets.yml123456timeline: layout: timeline title: 近期动态 api: https://s.dusays.com/api/v1/memo/all?limit=10 type: memos hide: footer 作为标签组件使用创建个人的 memos 时间线组件12&#123;% timeline api:https://memos.xaox.cc/api/v1/memo?creatorId=1&amp;limit=10 type:memos avatar:/assets/xaoxuu/avatar/rect-256@2x.png %&#125;&#123;% endtimeline %&#125; 创建多人的 memos 时间线组件12&#123;% timeline api:https://s.dusays.com/api/v1/memo/all?limit=10 type:memos %&#125;&#123;% endtimeline %&#125;"},{"title":"使用「mathjax」插件","path":"/third-party/mathjax.html","content":"使用前需要在 Markdown 文件开头加入 _posts/xxx.md123---mathjax: true--- 演示效果代码示例$$\\sum_{i&#x3D;0}^n i^2 &#x3D; \\frac{(n^2+n)(2n+1)}{6}$$_posts/xxx.md1$$\\sum_&#123;i=0&#125;^n i^2 = \\frac&#123;(n^2+n)(2n+1)&#125;&#123;6&#125;$$"},{"title":"如何使用文档系统","path":"/wiki-settings/index.html","content":"Stellar 独创了其它 Hexo 主题所没有的 Wiki 文档系统，可以自动找到一个项目的所有文档分页，生成一个目录树，还可以手动指定顺序、标题、分组，而非依赖文件路径、文件名来排序和显示。 基本流程1/3 创建项目描述文件在 blog/source/_data/ 文件夹中创建一个 wiki 文件夹，在其中放入各个项目的文档。以 Stellar 项目为例，文件名就是项目的 id：blog/source/_data/wiki/hexo-stellar.yml123456789101112131415161718192021222324252627282930313233343536373839404142434445464748name: Stellartitle: Stellar - 每个人的独立博客subtitle: &#x27;每个人的独立博客 | Designed by xaoxuu&#x27;tags: 博客主题icon: /assets/wiki/stellar/icon.svgcover: /assets/wiki/stellar/icon.svgdescription: Stellar 是一个内置文档系统的简约商务风 Hexo 主题，支持丰富的标签和动态数据组件。repo: xaoxuu/hexo-theme-stellarsearch: filter: /wiki/stellar/ placeholder: 在 Stellar 中搜索...leftbar: - tree - timeline_stellar_releases - relatedcomment_title: &#x27;评论区仅供交流，有问题请提 [issue](https://github.com/xaoxuu/hexo-theme-stellar/issues) 反馈。&#x27;comments: service: giscus giscus: data-repo: xaoxuu/hexo-theme-stellar data-mapping: number data-term: 226base_dir: /wiki/stellar/tree: &#x27;快速开始&#x27;: - index - examples - releases &#x27;基本使用&#x27;: - theme-settings - pages - sidebar - tag-plugins - tag-plugins/express - tag-plugins/data - tag-plugins/container - comments &#x27;文档系统&#x27;: - wiki-settings &#x27;进阶玩法&#x27;: - widgets - advanced-settings - notes - fcircle &#x27;技术支持&#x27;: - articles - todo - contributors2/3 设置布局模板和项目名称在此文档项目的 md 文件的 front-matter 部分指定所属的项目 id （即上一步创建的文件名 id.yml）blog/source/wiki/stellar/index.md1234---wiki: hexo-stellar # 这是项目id，对应 /data/wiki/hexo-stellar.ymltitle: 这是分页标题---3/3 将此项目「上架」在 blog/source/_data/ 文件夹中创建一个 wiki.yml 文件，在其中写入需要显示的项目 id：blog/source/_data/wiki.yml12- hexo-stellar- 其它项目这样在项目列表（wiki）页面就可以看到刚刚创建的项目了。 项目分页索引指定项目所在文件夹和目录树： blog/source/_data/wiki/hexo-stellar.yml1234567891011121314151617181920212223242526base_dir: /wiki/stellar/tree: &#x27;快速开始&#x27;: - index # 会被关联到 /wiki/stellar/index.md - examples # 会被关联到 /wiki/stellar/examples.md - releases &#x27;基本使用&#x27;: - theme-settings - pages - sidebar - tag-plugins - tag-plugins/express - tag-plugins/data - tag-plugins/container - comments &#x27;文档系统&#x27;: - wiki-settings &#x27;进阶玩法&#x27;: - widgets - advanced-settings - notes - fcircle &#x27;技术支持&#x27;: - articles - todo - contributors 如果目录树不需要分组，可以这样写： blog/source/_data/wiki/hexo-stellar.yml12345base_dir: /wiki/stellar/tree: - index # 会被关联到 /wiki/stellar/index.md - examples # 会被关联到 /wiki/stellar/examples.md - ... 是否显示封面项目可以显示一个全屏封面，封面占据一个屏幕的高度，会居中依次显示项目的 logo、标题、描述。开启项目封面方法如下： blog/source/_data/wiki/hexo-stellar.yml12cover: /assets/wiki/stellar/icon.svgcoverpage: true # 默认是 true 如果 logo 中已经包含了项目标题，可以这样设置不显示项目标题： blog/source/_data/wiki/hexo-stellar.yml1coverpage: [logo, description] 项目文档标签如果您有很多项目，有些项目是有相关性的，可以相同的 tags 值： blog/source/_data/wiki/hexo-stellar.yml1tags: 博客主题 也可以设置多个 tags 值： blog/source/_data/wiki/hexo-stellar.yml1tags: [博客主题, 开源项目] 项目的 GitHub 仓库信息设置了 repo 值就会在右上角显示项目仓库的相关链接： blog/source/_data/wiki/hexo-stellar.yml1repo: xaoxuu/hexo-theme-stellar 项目评论设置如果希望项目的所有分页使用相同的评论数据，可以在这里覆盖评论配置： blog/source/_data/wiki/hexo-stellar.yml123456comment_title: &#x27;评论区仅供交流，有问题请提 [issue](https://github.com/xaoxuu/hexo-theme-stellar/issues) 反馈。&#x27;comments: giscus: data-repo: xaoxuu/hexo-theme-stellar data-mapping: number data-term: 226 侧边栏组件如果您希望自定义某个项目的侧边栏组件，可以设置 sidebar 值： 可以覆盖组件： blog/source/_data/wiki/hexo-stellar.yml1234leftbar: - tree - timeline_stellar_releases - related todo 在目录树中隐藏某篇文章可以在 front-matter 中不设置 title 标题，或者将 title 改为 seo_title： blog/source/xxx/xxx.md1title: 原本的标题 todo 显示许可协议沿用主题配置文件中设置的： blog/source/_data/wiki/hexo-stellar.yml1license: true 也可以指定协议内容： blog/source/_data/wiki/hexo-stellar.yml1license: &#x27;本文采用 [署名-非商业性使用-相同方式共享 4.0 国际](https://creativecommons.org/licenses/by-nc-sa/4.0/) 许可协议，转载请注明出处。&#x27; 显示分享blog/source/_data/wiki/hexo-stellar.yml1share: true 修改 wiki 路径修改如下配置： blog/_config.stellar.yml123site_tree: wiki: base_dir: wiki # books / products ..."},{"title":"使用图表类插件","path":"/third-party/graph.html","content":"mermaid安装插件： 使用前需要在 Markdown 文件开头加入： _posts/xxx.md123---mermaid: true--- 演示效果代码示例123graph LRA(Section A) --&gt;|option 1| B(Section A)B --&gt;|option 2| C(Section C) 12345678910gitGraph commit commit branch develop commit commit commit checkout main commit commit https://mermaid.js.org/intro/https://mermaid.js.org/intro/"},{"title":"实现「笔记」栏目","path":"/wiki-settings/notes.html","content":"创建描述文件blog/source/_data/wiki/notes.yml123456789101112131415161718192021222324name: 备忘录title: 备忘录icon: # 列表页图标cover: # 封面页大图coverpage: [cover, title, description] # 封面页显示的内容comments: service: giscus # 若你不适用默认的评论方式，需要添加此项 giscus: # 需要你在主题配置文件_config.stellar.yml中设置好giscus的其他参数，其他评论方式同理 &#x27;data-term&#x27;: &#x27;23&#x27; &#x27;data-mapping&#x27;: numberbase_dir: /notes/tree: &#x27;日常问题解决方案&#x27;: - mac &#x27;移动端开发笔记&#x27;: - ios - flutter &#x27;前端学习笔记&#x27;: - nodejs - server &#x27;在线工具&#x27;: - json 设置 menu_id然后笔记页面的 front-matter 中指定要高亮的 menu_id： blog/source/notes/index.md1234---wiki: notes # 这个跟上面的 /wiki/notes.yml 关联起来menu_id: notes # 这个跟配置文件中的 `menubar.items.notes` 关联起来，这很重要，如果没有这个，就像普通的wiki项目一样了--- 这样就可以啦～"}]